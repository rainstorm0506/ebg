<?php
	/**
	 * 会员管理
	 * @author 夏勇高
	 */
	class User extends SModels {
		
		// 审核会员
		public function reviewUser($uid,$state,$remark)
		{
			return $this->update("user", 
				array("status_id"=>$state,'audit_time'=>$state == 710 ? time() : 0,'remark'=>$remark), "id=".$uid);
		}
		
		/**
		 * 获取资金变动日志信息
		 */
		public function getMoneyLogs($uid)
		{
			$SQL="SELECT l.*,a.action_name,u.money AS yue 
				FROM `user_action_log` l 
				INNER JOIN `user` u ON l.user_id=u.id
				LEFT JOIN user_action_setting a ON l.action_val=a.action_val 
				WHERE l.money!=0 AND l.user_id={$uid}";
			return $this->queryAll($SQL);
		}
		
		public function countMoneyLogs($uid)
		{
			return $this->queryScalar("SELECT COUNT(*) 
				FROM `user_action_log` l 
				INNER JOIN `user` u ON l.user_id=u.id
				LEFT JOIN user_action_setting a ON l.action_val=a.action_val 
				WHERE l.money!=0 AND l.user_id={$uid}");
		}
		
		/**
		 * 查询用户近期（30天之内）浏览历史纪录
		 */
		public function getHistories($uid)
		{
			$sql="SELECT h.time,m.mer_name,m.store_name,b.en_name,b.zh_name,g.* FROM user_history h
				LEFT JOIN goods g ON h.goods_id=g.id
				LEFT JOIN user_merchant m ON g.merchant_id=m.uid
				LEFT JOIN goods_brand b ON g.brand_id=b.id
				WHERE unix_timestamp()-h.time<=2592000000
				AND h.user_id={$uid} ORDER BY h.time DESC";
			return $this->queryAll($sql);
		}
		
		public function countHistories($uid)
		{
			return $this->queryScalar("SELECT COUNT(*) FROM user_history h
				LEFT JOIN goods g ON h.goods_id=g.id
				LEFT JOIN user_merchant m ON g.merchant_id=m.uid
				LEFT JOIN goods_brand b ON g.brand_id=b.id
				WHERE unix_timestamp()-h.time<=2592000000
				AND h.user_id={$uid}");
		}
		
		/**
		 * 获取用户成长值、积分日志信息
		 */
		public function getGrowLogs($uid)
		{
			$SQL="SELECT l.*,a.action_name,u.nickname FROM `user` AS u 
				INNER JOIN user_action_log AS l ON u.id=l.user_id 
				LEFT JOIN user_action_setting a ON l.action_val=a.action_val 
				WHERE user_id={$uid} 
				ORDER BY l.time DESC";
			return $this->queryAll($SQL);
		}
		
		public function countGrowLogs($uid)
		{
			return $this->queryScalar("SELECT COUNT(*) FROM `user` AS u 
				INNER JOIN user_action_log AS l ON u.id=l.user_id 
				LEFT JOIN user_action_setting a ON l.action_val=a.action_val 
				WHERE user_id={$uid}");
		}
	
		/**
		 * 查询用户评论过的商品
		 */
		public function getComments($uid)
		{
			$sql="SELECT o.*,u.nickname,g.title,m.mer_name FROM order_comment o 
				LEFT JOIN user u ON o.user_id=u.id LEFT JOIN goods g ON o.goods_id=g.id 
				LEFT JOIN user_merchant m ON o.merchant_id=m.uid WHERE o.user_id={$uid}";
			return $this->queryAll($sql);
		}
		
		public function countComments($uid)
		{
			return $this->queryScalar("SELECT COUNT(*) FROM order_comment o 
				LEFT JOIN user u ON o.user_id=u.id LEFT JOIN goods g ON o.goods_id=g.id 
				LEFT JOIN user_merchant m ON o.merchant_id=m.uid WHERE o.user_id={$uid}");
		}
		
		/**
		 * 获取用户关注的商品信息
		 */
		public function getFollows($uid)
		{
			$sql="SELECT uc.collect_time,b.zh_name,b.en_name,m.mer_name,m.store_name,g.*
				FROM `user_collect` AS uc
				LEFT JOIN goods AS g ON uc.collect_id=g.id 
				LEFT JOIN goods_brand b ON g.brand_id=b.id 
				LEFT JOIN user_merchant m ON g.merchant_id=m.uid 
				WHERE uc.type=1 AND uc.user_id={$uid}";
			return $this->queryAll($sql);
		}
		
		public function countFollows($uid)
		{
			return $this->queryScalar("SELECT COUNT(*)
				FROM `user_collect` AS uc
				LEFT JOIN goods g ON uc.collect_id=g.id
				LEFT JOIN goods_brand b ON g.brand_id=b.id
				LEFT JOIN user_merchant m ON g.merchant_id=m.uid 
				WHERE uc.type=1 AND uc.user_id={$uid}");
		}
		
		/**
		 * 查询用户订单信息
		 */
		public function getOrders($uid)
		{
			$sql="SELECT o.id,o.order_sn,o.create_time,o.order_money,e.addressee_shoot,s.user_title,s.merchant_title,s.back_title,o.pay_type,o.is_pay
				FROM orders o 
				INNER JOIN orders_extend e ON o.order_sn = e.order_sn
				LEFT JOIN `status` s ON o.order_status_id=s.id
				WHERE o.user_id={$uid}";
			
			return $this->queryAll($sql);
		}
		
		/**
		 * 查询用户推荐人的详情
		 * @param int id $uid
		 * @return array 被推荐人的信息
		 */
		
		public function getOrderRecommended($uid,$array,$offset,$pageSize){
			$sql = "SELECT u.id as uid,u.phone,u.nickname,u.realname,o.order_sn,o.create_time,o.re_bonus,o.order_money,o.order_status_id,s.back_title FROM `user` as u
					INNER JOIN `orders` as o ON u.id = o.user_id INNER JOIN `status` as s ON  o.order_status_id = s.id WHERE u.id = {$uid}";
			if(count($array) > 0){
				foreach ($array as $key => $val){
					if($key == 'start_time'){
						$start_time = strtotime($val);
						$sql .= " AND o.create_time >= {$start_time}";
					}
					if($key == 'end_time'){
						$end_time = strtotime($val);
						$sql .= " AND o.create_time < {$end_time}";
					}
					if($key == 'phone'){
						$sql .= " AND u.phone LIKE '%{$val}%'";
					}
					if($key == 'order_sn'){
						$sql .= " AND o.order_sn LIKE '%{$val}%'";
					}
					if($key == 'real_name'){
						$sql .= " AND u.realname LIKE '%{$val}%' OR u.nickname LIKE '%{$val}%'";
					}
					if($key == 'status'){
						$sql .= " AND o.order_status_id = {$val}";
					}
					
				}
				
			}
			$sql .= " GROUP BY o.order_sn ORDER BY o.create_time DESC LIMIT {$offset},{$pageSize}";
			return $this->queryAll($sql);
		}
		
		/**
		 * 查询用户推荐人的信息列表
		 * @param int id $uid
		 * @return array 被推荐人的信息
		 */
		
		public function getRecommendedList($uid,$array,$offset,$pageSize){
			$sql = "SELECT u.id as uid,u.re_uid,u.exp,u.phone,u.reg_time,u.nickname,u.realname,u.re_uid,count(o.id) as oid,sum(o.re_bonus) as bonus FROM `user` as u
					LEFT JOIN `orders` as o ON u.id = o.user_id WHERE u.re_uid = {$uid}";
			if(count($array) > 0){
				foreach ($array as $key => $val){
					if($key == 'start_time'){
						$start_time = strtotime($val);
						$sql .= " AND u.reg_time >= {$start_time}";
					}
					if($key == 'end_time'){
						$end_time = strtotime($val);
						$sql .= " AND u.reg_time < {$end_time}";
					}
					if($key == 'phone'){
						$sql .= " AND u.phone LIKE '%{$val}%'";
					}
					if($key == 'real_name'){
						$sql .= " AND (u.realname LIKE '%{$val}%' OR u.nickname LIKE '%{$val}%')";
					}
				}
			}
			$sql .= " GROUP BY u.id ORDER BY u.reg_time DESC LIMIT {$offset},{$pageSize}";
			return $this->queryAll($sql);
		}
		
		/**
		 * 查村用户推荐人的总订单数
		 * @param int id $uid
		 * @return array 查询的数组
		 */
		public function getOrderRecCount($uid,$array){
			$sql = "SELECT COUNT(*) FROM `user` as u RIGHT JOIN `orders` as o on u.id = o.user_id WHERE o.user_id = {$uid}";
			if(count($array) > 0){
				foreach ($array as $key => $val){
					if($key == 'start_time'){
						$start_time = strtotime($val);
						$sql .= " AND o.create_time >= {$start_time}";
					}
					if($key == 'end_time'){
						$end_time = strtotime($val);
						$sql .= " AND o.create_time< {$end_time}";
					}
					if($key == 'phone'){
						$sql .= " AND u.phone LIKE '%{$val}%'";
					}
					if($key == 'order_sn'){
						$sql .= " AND o.order_sn LIKE '%{$val}%'";
					}
					if($key == 'real_name'){
						$sql .= " AND (u.realname LIKE '%{$val}%' OR u.nickname LIKE '%{$val}%')";
					}
					if($key == 'status'){
						$sql .= " AND o.order_status_id = {$val}";
					}
				}
			}
			return $this->queryScalar($sql);
		}
		
		/**
		 * 查村用户推荐的总用户数   
		 * @param int id $uid
		 * @return array 查询的数组
		 */
		public function getRecCount($uid,$array){
			$sql = "SELECT COUNT(*) FROM `user` WHERE re_uid = {$uid}";
			if(count($array) > 0){
				foreach ($array as $key => $val){
					if($key == 'start_time'){
						$start_time = strtotime($val);
						$sql .= " AND reg_time >= {$start_time}";
					}
					if($key == 'end_time'){
						$end_time = strtotime($val);
						$sql .= " AND reg_time < {$end_time}";
					}
					if($key == 'phone'){
						$sql .= " AND phone LIKE '%{$val}%'";
					}
					if($key == 'real_name'){
							$sql .= " AND (realname LIKE '%{$val}%' OR nickname LIKE '%{$val}%')";
					}
				}
			}
			$sql .= ' ORDER BY reg_time DESC ';
			return $this->queryScalar($sql);
		}
		
		public function countOrders($uid)
		{
			return $this->queryScalar("SELECT COUN(*) FROM orders o 
				INNER JOIN orders_extend e ON o.order_sn = e.order_sn
				LEFT JOIN `status` s ON o.order_status_id=s.id
				WHERE o.user_id={$uid}");
		}
		
		/**
		 * 获取用户收获地址信息列表
		 */
		public function getUserAddresses($uid)
		{
			$sql="SELECT * FROM user_address WHERE user_id={$uid} ORDER BY is_default DESC";
			return $this->queryAll($sql);
		}
		
		public function countAddresses($uid)
		{
			return $this->queryScalar("SELECT COUNT(*) FROM user_address WHERE user_id={$uid}");
		}
		
		/**
		 * 得到 会员列表
		 * @param	int	 $type	用户类型
		 */
		public function getList($type, $keyword, $offset=0, $rows=20)
		{
			$SQL = '';
			if ($keyword)
			{
				$keyword = $this->quoteLikeValue($keyword);
				$SQL = " AND (phone LIKE {$keyword} OR nickname LIKE {$keyword})";
			}
			if($type){
				$SQL.=" AND user_type={$type}";
			}
			return $this->queryAll("SELECT * FROM user WHERE 1=1 {$SQL} ORDER BY id DESC LIMIT {$offset},{$rows}");
		}

		public function getCount($type, $keyword)
		{
			$SQL = '';
			if ($keyword)
			{
				$keyword = $this->quoteLikeValue($keyword);
				$SQL = "AND (phone LIKE {$keyword} OR nickname LIKE {$keyword})";
			}
			if($type){
				$SQL.=" AND user_type={$type}";
			}
			return (int)$this->queryScalar("SELECT COUNT(*) FROM user WHERE 1=1 {$SQL}");
		
		}
		/**
		 * 检查会员 是否重复（检测手机号）
		 * @param		string		$phone		会员手机号
		 * @param		int			$id			会员ID
		 */
		public function checkUserPhone($phone, $id , $userType = 0)
        {
			if ($phone)
            {
				$SQL = $id ? "AND id!={$id}" : '';
				if($userType==3){
					$userType=" AND user_type={$userType} ";
				}
				if($userType==1 || $userType==2){
					$userType =" AND (user_type=1 OR user_type=2) ";
				}
				return (boolean)$this -> queryRow("SELECT id FROM user WHERE `phone`={$this->quoteValue($phone)} {$SQL} {$userType}");
			} else {
				return false;
			}
		}

		/**
		 * 添加 会员
		 * @param		array		$post		post
		 */
		public function create(array $post)
		{
			$phone = trim($post['phone']);
			$reCode = trim($post['re_code']);
			$reUid = GlobalUser::getReUid($reCode);
			$this -> insert('user', array(
				'source'		=> 1,
				'user_type'		=> 1,
				'phone'			=> $phone,
				'face'			=> $this->getPhotos(empty($post['face'])?'':$post['face'] , 'user'),
				'nickname'		=> trim($post['nickname']),
				'password'		=> GlobalUser::hashPassword($post['password']),
				'user_code'		=> $phone,
				're_code'		=> $reCode,
				're_uid'		=> $reUid,
				'reg_time'		=> time(), 
				'status_id'		=> 510,
				'last_time'		=> 0
			));
			return $this -> getInsertId();
		}

		/**
		 * 编辑 单个会员
		 * @param		array		$post		post
		 * @param		int			$id			会员ID
		 */
		public function modify(array $post, $id = 0)
		{
			if ($id <= 0)
				return false;
			
			$ary = array(
				'nickname'	=> trim($post['nickname']),
				'face'		=> $this->getPhotos(empty($post['face'])?'':$post['face'] , 'user'),
			);
			if(trim($post['password']) != '')
				$ary['password'] = GlobalUser::hashPassword($post['password']);
			
			return $this->update('user' , $ary , 'id='.$id);
		}

		public function setOn($uid)
		{
			if($uid)
			{
				return $this->update("user", array('status_id'=>510),"id=".$uid);
			}else{
				return false;
			}
		}
		
		public function setOff($uid)
		{
			if($uid){
				return $this->update("user", array('status_id'=>511),"id=".$uid);
			}else{
				return false;
			}
		}
		
		/**
		 * 得到 单个会员的信息
		 * @param		int		$id		会员ID
		 * @return		array
		 */
		public function getInfo($id)
		{
			if ($id <= 0)
				return array();
			
			return $this->queryRow("SELECT * FROM user WHERE `id`={$this->quoteValue($id)}");
		}

		/**
		 * 获取用户余额
		 */
		public function getMoney($id)
		{
			return $id>0 ? (int)$this->queryScalar("SELECT money FROM user WHERE id={$id}") : 0;
		}
		/**
		 * 修改用户余额
		 */
		public function changeMoney($deMoney, $id)
		{
			return $this->update('user', array('money'=> $deMoney), 'id='.(int)$id);
		}
		
		/**
		 * 删除 会员
		 */
		public function deletes($id)
		{
			if ($id <= 0)
				return false;
			
			$transaction = Yii::app()->getDb()->beginTransaction();
			try
			{
				$this->delete('user', 'id='.$id);
				$this->delete('user_action_log', 'user_id='.$id);
				$this->delete('user_address', 'user_id='.$id);
				$this->delete('user_collect', 'user_id='.$id);
				$this->delete('user_detail_info', 'user_id='.$id);
				$this->delete('user_history', 'user_id='.$id);
				
				$transaction->commit();
				return true;
			}catch(Exception $e){
				$transaction->rollBack();
			}
			return false;
		}
		/**
		 * 获得用户推荐用户的订单信息
		 * @param 	string 	$status 	$start 	$keys 	$type
		 * @param int $uid
		 * */
		public function getOutUserOrderList($uid,$start,$end,$type,$keys)
		{
				$sql 	= 'SELECT u.reg_time, u.user_type, u.phone, u.nickname,u.realname, u.exp, count(o.id) as nums, sum(o.re_bonus) as omoney FROM `user` as u left join `orders` as o ON u.id = o.user_id';
				$where	= ' WHERE u.re_uid = '.$uid;
				if(!empty($start))
				{
					$where .= ' AND (u.reg_time = '.$start.' or u.reg_time > '.$start.')';
				}
				if(!empty($end))
				{
					$where .= ' AND (u.reg_time = '.$end.' or u.reg_time < '.$end.')';
				}
				if(!empty($type) && !empty($keys))
				{
					if($type == 'real_name')
					{
						$where .= " AND (u.nickname LIKE '%". $keys ."%' or u.realname LIKE '%". $keys ."%')";
					}
					else
					{
						$where .= " AND u.".$type." LIKE '%". $keys ."%'";
					}

				}

				$sql 	.= $where.' GROUP BY u.id ORDER BY u.reg_time DESC';
				$res	= $this->queryAll($sql);

				$username = '';
				//时间和会员等级处理
				foreach($res as $key=>$val)
				{
					$res[$key]['reg_time'] 	= !empty($val['reg_time'])?date('Y-m-d H:i:s',$val['reg_time']):date('Y-m-d H:i:s');
					$res[$key]['exp'] 		= GlobalUser::getUserLayerName($val['exp'],$val['user_type']);
					$res[$key]['omoney'] 	= !empty($val['omoney'])?$val['omoney']:0;
					$username				= !empty($val['nickname'])?$val['nickname']:$val['nickname'];
					$username				= !empty($username)?$username:$val['phone'];
					$res[$key]['nickname']  = $username;
				}

				return $res;
		}
		/**
		 * 获得用户推荐总人数
		 * @param 	int 	$id
 		 * */
		public function getUserReNums($id)
		{
			if($id <=0)
			{
				return false;
			}
			$sql = 'select count(`id`) as nums from `user` where `re_uid` = '.$id;
			$num = $this->queryRow($sql);

			return $num['nums'];
		}
		/**
		 * 获得被推荐用户订单提成详情
		 * */
		public function getReUserOrderList($uid,$status,$start,$end,$type,$keys)
		{
			$sql 	= 'SELECT u.phone, u.nickname, u.realname, o.create_time, o.order_sn, o.order_money, o.order_status_id, o.re_bonus from `user` as u left join `orders` as o on u.id = o.user_id ';
			$where 	= ' WHERE u.id = '.$uid;
			if(!empty($status))
			{
				$where .= ' AND o.order_status_id = '.$status;
			}
			if(!empty($start))
			{
				$where .= ' AND (o.create_time = '.$start.' or o.create_time > '.$start.')';
			}
			if(!empty($end))
			{
				$where .= ' AND (o.create_time = '.$end.' or o.create_time < '.$end.')';
			}
			if(!empty($type) && !empty($keys))
			{
				if($type == 'order_sn')
				{
					$where .= " AND o.".$type." LIKE '%". $keys ."%'";
				}
				else if($type == 'real_name')
				{
					$where .= " AND (u.nickname LIKE '%". $keys ."%' or u.realname LIKE '%". $keys ."%')";
				}
				else
				{
					$where .= " AND u.".$type." LIKE '%". $keys ."%'";
				}
			}
			$sql 	.= $where.' ORDER BY o.create_time DESC';
			$res	= $this->queryAll($sql);

			foreach($res as $key=>$val)
			{
				$res[$key]['create_time'] = date('Y-m-d H:i:s',$val['create_time']);
				$sql 	 = 'SELECT `back_title` FROM `status` WHERE `id` = '.$val['order_status_id'];
				$ostatus = $this->queryRow($sql);
				$res[$key]['order_status'] = !empty($ostatus)?$ostatus['back_title']:'暂无';
			}
			return $res;
		}
	}
